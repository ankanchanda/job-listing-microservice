server.port=8084
spring.application.name=gateway

# Eureka Client
eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

#Zipkin
# shouldn't be 1.0 in production, requires actuator dependency
management.tracing.sampling.probability=1.0
# no need to mention this if it is default - localhost
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans

# Gateway
spring.cloud.gateway.routes[0].id=jobms
spring.cloud.gateway.routes[0].uri=http://jobms:8082
spring.cloud.gateway.routes[0].predicates[0]=Path=/jobs/**

spring.cloud.gateway.routes[1].id=companyms
spring.cloud.gateway.routes[1].uri=http://companyms:8081
spring.cloud.gateway.routes[1].predicates[0]=Path=/companies/**

spring.cloud.gateway.routes[2].id=reviewms
# lb://REVIEWMS is the name of the service registered in Eureka
# This helps in load balancing and not to care about the number of instances the service has
spring.cloud.gateway.routes[2].uri=http://reviewms:8083
spring.cloud.gateway.routes[2].predicates[0]=Path=/reviews/**

spring.cloud.gateway.routes[3].id=eureka-server
spring.cloud.gateway.routes[3].uri=http://service-registry:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/main
# This tells that whenever the request is being routed 
# it doesn't need to route to /eureka/main but to 8761/
spring.cloud.gateway.routes[3].filters[0]=SetPath=/

# For loading the html and css for eureka server
spring.cloud.gateway.routes[4].id=eureka-server-css
spring.cloud.gateway.routes[4].uri=http://service-registry:8761
spring.cloud.gateway.routes[4].predicates[0]=Path=/eureka/**

# Logging Level
logging.level.root=info
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE

